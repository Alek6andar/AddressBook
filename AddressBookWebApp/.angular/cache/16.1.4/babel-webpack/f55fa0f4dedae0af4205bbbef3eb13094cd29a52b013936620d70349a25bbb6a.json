{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../contact.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/router\";\nconst _c0 = function (a1) {\n  return [\"/contact/\", a1, \"view\"];\n};\nconst _c1 = function (a1) {\n  return [\"/contact/\", a1, \"edit\"];\n};\nfunction IndexComponent_tr_21_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"td\");\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"td\");\n    i0.ɵɵtext(10);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(11, \"td\");\n    i0.ɵɵtext(12);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(13, \"td\")(14, \"a\", 5);\n    i0.ɵɵtext(15, \"View\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(16, \"a\", 6);\n    i0.ɵɵtext(17, \"Edit\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(18, \"button\", 7);\n    i0.ɵɵlistener(\"click\", function IndexComponent_tr_21_Template_button_click_18_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r3);\n      const contact_r1 = restoredCtx.$implicit;\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.deleteContact(contact_r1.id));\n    });\n    i0.ɵɵtext(19, \"Delete\");\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const contact_r1 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(contact_r1.id);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(contact_r1.firstName);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(contact_r1.lastName);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(contact_r1.address);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(contact_r1.email);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(contact_r1.phoneNumber);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"routerLink\", i0.ɵɵpureFunction1(8, _c0, contact_r1.id));\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"routerLink\", i0.ɵɵpureFunction1(10, _c1, contact_r1.id));\n  }\n}\nexport class IndexComponent {\n  /*------------------------------------------\n  --------------------------------------------\n  Created constructor\n  --------------------------------------------\n  --------------------------------------------*/\n  constructor(contactService) {\n    this.contactService = contactService;\n    this.contacts = [];\n  }\n  /**\n   * Write code on Method\n   *\n   * @return response()\n   */\n  ngOnInit() {\n    this.contactService.getAll().subscribe(data => {\n      this.contacts = data;\n      console.log(this.contacts);\n    });\n  }\n  /**\n   * Write code on Method\n   *\n   * @return response()\n   */\n  deleteContact(id) {\n    this.contactService.delete(id).subscribe(res => {\n      this.contacts = this.contacts.filter(item => item.id !== id);\n      console.log('Post deleted successfully!');\n    });\n  }\n}\nIndexComponent.ɵfac = function IndexComponent_Factory(t) {\n  return new (t || IndexComponent)(i0.ɵɵdirectiveInject(i1.ContactService));\n};\nIndexComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: IndexComponent,\n  selectors: [[\"app-index\"]],\n  decls: 22,\n  vars: 1,\n  consts: [[1, \"container\"], [\"href\", \"#\", \"routerLink\", \"/contact/create/\", 1, \"btn\", \"btn-success\"], [1, \"table\", \"table-bordered\"], [\"width\", \"220px\"], [4, \"ngFor\", \"ngForOf\"], [\"href\", \"#\", 1, \"btn\", \"btn-info\", 3, \"routerLink\"], [\"href\", \"#\", 1, \"btn\", \"btn-primary\", 3, \"routerLink\"], [\"type\", \"button\", 1, \"btn\", \"btn-danger\", 3, \"click\"]],\n  template: function IndexComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"h1\");\n      i0.ɵɵtext(2, \"Address Book\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(3, \"a\", 1);\n      i0.ɵɵtext(4, \"Create New Contact\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(5, \"table\", 2)(6, \"tr\")(7, \"th\");\n      i0.ɵɵtext(8, \"ID\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(9, \"th\");\n      i0.ɵɵtext(10, \"First Name\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(11, \"th\");\n      i0.ɵɵtext(12, \"Last Name\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(13, \"th\");\n      i0.ɵɵtext(14, \"Address\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(15, \"th\");\n      i0.ɵɵtext(16, \"Email\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(17, \"th\");\n      i0.ɵɵtext(18, \"Phone Number\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(19, \"th\", 3);\n      i0.ɵɵtext(20, \"Action\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵtemplate(21, IndexComponent_tr_21_Template, 20, 12, \"tr\", 4);\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(21);\n      i0.ɵɵproperty(\"ngForOf\", ctx.contacts);\n    }\n  },\n  dependencies: [i2.NgForOf, i3.RouterLink],\n  styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"names":["i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵlistener","IndexComponent_tr_21_Template_button_click_18_listener","restoredCtx","ɵɵrestoreView","_r3","contact_r1","$implicit","ctx_r2","ɵɵnextContext","ɵɵresetView","deleteContact","id","ɵɵadvance","ɵɵtextInterpolate","firstName","lastName","address","email","phoneNumber","ɵɵproperty","ɵɵpureFunction1","_c0","_c1","IndexComponent","constructor","contactService","contacts","ngOnInit","getAll","subscribe","data","console","log","delete","res","filter","item","ɵɵdirectiveInject","i1","ContactService","selectors","decls","vars","consts","template","IndexComponent_Template","rf","ctx","ɵɵtemplate","IndexComponent_tr_21_Template"],"sources":["C:\\code\\AddressBookWebApp\\src\\app\\contact\\index\\index.component.ts","C:\\code\\AddressBookWebApp\\src\\app\\contact\\index\\index.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { ContactService } from '../contact.service';\r\nimport { Contact } from '../contact';\r\n       \r\n@Component({\r\n  selector: 'app-index',\r\n  templateUrl: './index.component.html',\r\n  styleUrls: ['./index.component.css']\r\n})\r\nexport class IndexComponent implements OnInit {\r\n       \r\n  contacts: Contact[] = [];\r\n     \r\n  /*------------------------------------------\r\n  --------------------------------------------\r\n  Created constructor\r\n  --------------------------------------------\r\n  --------------------------------------------*/\r\n  constructor(public contactService: ContactService) { }\r\n     \r\n  /**\r\n   * Write code on Method\r\n   *\r\n   * @return response()\r\n   */\r\n  ngOnInit(): void {\r\n    this.contactService.getAll().subscribe((data: Contact[])=>{\r\n      this.contacts = data;\r\n      console.log(this.contacts);\r\n    })  \r\n  }\r\n     \r\n  /**\r\n   * Write code on Method\r\n   *\r\n   * @return response()\r\n   */\r\n  deleteContact(id:string){\r\n    this.contactService.delete(id).subscribe(res => {\r\n         this.contacts = this.contacts.filter(item => item.id !== id);\r\n         console.log('Post deleted successfully!');\r\n    })\r\n  }\r\n     \r\n}","<div class=\"container\">\r\n    <h1>Address Book</h1>\r\n   \r\n    <a href=\"#\" routerLink=\"/contact/create/\" class=\"btn btn-success\">Create New Contact</a>\r\n     \r\n    <table class=\"table table-bordered\">\r\n      <tr>\r\n        <th>ID</th>\r\n        <th>First Name</th>\r\n        <th>Last Name</th>\r\n        <th>Address</th>\r\n        <th>Email</th>\r\n        <th>Phone Number</th>\r\n        <th width=\"220px\">Action</th>\r\n      </tr>\r\n      <tr *ngFor=\"let contact of contacts\">\r\n        <td>{{ contact.id }}</td>\r\n        <td>{{ contact.firstName }}</td>\r\n        <td>{{ contact.lastName }}</td>\r\n        <td>{{ contact.address }}</td>\r\n        <td>{{ contact.email }}</td>\r\n        <td>{{ contact.phoneNumber }}</td>\r\n        <td>\r\n          <a href=\"#\" [routerLink]=\"['/contact/', contact.id, 'view']\" class=\"btn btn-info\">View</a>\r\n          <a href=\"#\" [routerLink]=\"['/contact/', contact.id, 'edit']\" class=\"btn btn-primary\">Edit</a>\r\n          <button type=\"button\" (click)=\"deleteContact(contact.id)\" class=\"btn btn-danger\">Delete</button>\r\n        </td>\r\n      </tr>\r\n    </table>\r\n </div>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}